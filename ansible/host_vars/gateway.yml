---
# gateway node variables

########################
# dnsmasq role variables
########################
dnsmasq_interface: '{{ dmz_port }}'
dnsmasq_listen_address: '{{ dmz_network_if_ip }}'
dnsmasq_domain_name: '{{ dmz_dns_domain }}'
# Template used to provide main configuration file.
dnsmasq_conf_template: 'dnsmasq.conf.j2'
# Path to the main configuration file
dnsmasq_conf_directory: '/etc/dnsmasq.d'
dnsmasq_upstream_dns_servers:
  - '{{ global_dns1 }}'
  - '{{ global_dns2 }}'
dnsmasq_dhcp_range: '10.0.0.100,10.0.0.149'
#dnsmasq_additional_dhcp_hosts:
#  ethernet_dhcp:
#    desc: "PiHole server"
#    mac: 
#    ip: 10.0.0.91
dnsmasq_additional_dns_hosts:
  ntp_server:
    desc: "NTP Server"
    hostname: ntp
    ip: '{{ dmz_network_if_ip }}'
  dns_server:
    desc: "DNS Server"
    hostname: dns
    ip: '{{ dmz_network_if_ip }}'
  s3_server:
    desc: "S3 Server"
    hostname: s3
    ip: 10.0.0.41
  elasticsearch:
    desc: "Elasticsearch server"
    hostname: elasticsearch
    ip: 10.0.0.90
  grafana:
    desc: "Monitor server"
    hostname: monitoring
    ip: 10.0.0.90
  rancher:
    desc: "Rancher server"
    hostname: rancher
    ip: 10.0.0.90
  pihole:
    desc: "PiHole server"
    ip: 10.0.0.90
  logmon:
    desc: "Log monitoring"
    ip: 10.0.0.90
  key_cloak:
    desc: "Keycloak server"
    hostname: sso
    ip: 10.0.0.90
  oauth2_proxy:
    desc: "Oauth2 Proxy"
    hostname: oauth2-proxy
    ip: 10.0.0.90
  fluentd:
    desc: "Fluentd server"
    hostname: fluentd
    ip: 10.0.0.92
  vault_server:
    desc: "Vault server"
    hostname: vault
    ip: '{{ dmz_network_if_ip }}'
dnsmasq_enable_tftp: true
dnsmasq_tftp_root: /srv/tftp
dnsmasq_additional_conf: |-
  # Enabling logs
  log-queries
  log-dhcp
  log-facility=/var/log/dnsmasq.log

  # Enabling PXE boot x86 servers
  # Legacy BIOS boot
  dhcp-boot=pxelinux.0
  # UEFI boot
  dhcp-match=set:efi-x86_64,option:client-arch,7
  dhcp-boot=tag:efi-x86_64,bootx64.efi

####################
# ntp role variables
####################
ntp_allow_hosts: [10.0.0.0/24]

#########################
# firewall role variables
#########################

# tcp 9100 Prometheus (fluent-bit)
# tcp 8200, 8201 Vault server
# udp 69, TFTP server
# TCP 6443 load balancer K3S API
in_tcp_port: '{ ssh, https, http, icmp, iscsi-target, 9100, 8200, 8201, 6443 }'
in_udp_port: '{ snmp, domain, ntp, bootps, 69, icmp }'
# tcp 9091 minio server
forward_tcp_port: '{ http, https, ssh, 9091 }'
forward_udp_port: '{ domain, ntp }'
# Enabling forwarding and NAT
firewall_forward_enabled: true
firewall_nat_enabled: true
# Definitions
nft_define_host:
  lan interface:
    name: lan_interface
    value: "{{ lan_port }}"
  dmz interface:
    name: dmz_interface
    value: "{{ dmz_port }}"
  lan network:
    name: lan_network
    value: '{{ lan_network_cidr }}'
  dmz network:
    name: dmz_network
    value: '{{ dmz_network_cidr }}'
  forward tcp accepted:
    name: forward_tcp_accept
    value: '{{ forward_tcp_port }}'
  forward udp accepted:
    name: forward_udp_accept
    value: '{{ forward_udp_port }}'
# Forward Definitions
nft_set_host:
  forward_tcp_accept:
    - type inet_service; flags interval;
    - elements = $forward_tcp_accept
  forward_udp_accept:
    - type inet_service; flags interval;
    - elements = $forward_udp_accept
# Input rules
# override default rules allowing incoming broadcast traffic (DHCP)
nft_input_host_rules:
  010 drop unwanted: []
  011 drop unwanted ipv6: []

# Output rules
# override default rules allowing all out traffic
nft_output_host_rules:
  000 policy:
    - type filter hook output priority 0;
  005 global: []
  015 localhost: []
  050 icmp: []
  200 output udp accepted: []
  210 output tcp accepted: []
  250 reset-ssh: []

# Forwarding rules
nft_forward_host_rules:
  200 dmz to lan tcp:
    - iifname $dmz_interface ip saddr $dmz_network oifname $lan_interface tcp dport @forward_tcp_accept ct state new accept
  210 lan to dmz udp:
    - iifname $dmz_interface ip saddr $dmz_network oifname $lan_interface udp dport @forward_udp_accept ct state new accept
  220 ssh from lan:
    - iifname $lan_interface oifname $dmz_interface ip daddr $dmz_network tcp dport ssh ct state new accept
  230 http from lan:
    - iifname $lan_interface oifname $dmz_interface ip daddr $dmz_network tcp dport {http, https} ct state new accept
  242 haproxy from lan:
    - iifname $lan_interface oifname $dmz_interface ip daddr 10.0.0.11 tcp dport 6443 ct state new accept
  250 port-forwarding from lan:
    - iifname $lan_interface oifname $dmz_interface ip daddr 10.0.0.11 tcp dport 8080 ct state new accept
# NAT Post-routing
nft_nat_host_postrouting_rules:
  005 masquerade dmz to lan:
    - ip saddr $dmz_network oifname $lan_interface masquerade

############################
# restic backup role variables
############################
restic_clean_service: true
